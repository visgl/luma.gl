"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[5744],{3795:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var n=t(4848),a=t(8453);const c={},s="Overview",i={id:"api-reference/core/README",title:"Overview",description:"The @luma.gl/core module provides an abstract API that enables application code",source:"@site/../docs/api-reference/core/README.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/",permalink:"/docs/api-reference/core/",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/master/docs/../docs/api-reference/core/README.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Overview",permalink:"/docs/api-reference/"},next:{title:"luma",permalink:"/docs/api-reference/core/luma"}},o={},d=[{value:"Installing adapters",id:"installing-adapters",level:2},{value:"Creating GPU Resources",id:"creating-gpu-resources",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"overview",children:"Overview"})}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"@luma.gl/core"})," module provides an abstract API that enables application code\nto portably work with both WebGPU and WebGL. The main export is the ",(0,n.jsx)(r.code,{children:"Device"})," class\nwhich provides methods for creating GPU resources such as ",(0,n.jsx)(r.code,{children:"Buffer"}),", ",(0,n.jsx)(r.code,{children:"Texture"}),", ",(0,n.jsx)(r.code,{children:"Shader"})," etc."]}),"\n",(0,n.jsx)(r.h2,{id:"installing-adapters",children:"Installing adapters"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"@luma.gl/core"})," module is not usable on its own. A device adapter module must\nbe imported and provided during device creation."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {webgpuAdapter} from '@luma.gl/webgpu';\n\nconst device = await luma.createDevice({type: 'webgpu', adapters: [webgpuAdapter], createCanvasContext: ...});\n"})}),"\n",(0,n.jsx)(r.p,{children:"It is possible to supply more than one device adapter to create an application\nthat can work in both WebGL and WebGPU environments."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {webgpuAdapter} from '@luma.gl/webgpu';\nimport {webglAdapter} '@luma.gl/webgl';\n\nconst webgpuDevice = luma.createDevice({type: 'best-available', adapters: [webgpuAdapter, webglAdapter], createCanvasContext: ...});\n"})}),"\n",(0,n.jsx)(r.h2,{id:"creating-gpu-resources",children:"Creating GPU Resources"}),"\n",(0,n.jsxs)(r.p,{children:["Once the application has created a ",(0,n.jsx)(r.code,{children:"Device"}),", GPU resources can be created:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"const buffer = device.createBuffer(...);\nconst texture = device.createTexture(...);\nconst renderPass = device.beginRenderPass(...);\n"})})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>i});var n=t(6540);const a={},c=n.createContext(a);function s(e){const r=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(c.Provider,{value:r},e.children)}}}]);