"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[4392],{245:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var t=s(4848),n=s(8453);const a={},i="Storage Buffers",o={id:"api-guide/gpu/gpu-storage-buffers",title:"Storage Buffers",description:"storage buffers represent a flexible mechanism for providing data to shaders, they are not available in WebGL, so applications may need to consider fallbacks.",source:"@site/../docs/api-guide/gpu/gpu-storage-buffers.md",sourceDirName:"api-guide/gpu",slug:"/api-guide/gpu/gpu-storage-buffers",permalink:"/docs/api-guide/gpu/gpu-storage-buffers",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/master/docs/../docs/api-guide/gpu/gpu-storage-buffers.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Uniforms",permalink:"/docs/api-guide/gpu/gpu-uniforms"},next:{title:"Shader Modules",permalink:"/docs/api-guide/shaders/shader-modules"}},u={},d=[{value:"Storage Buffer Basics",id:"storage-buffer-basics",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"storage-buffers",children:"Storage Buffers"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"storage buffers"})," represent a flexible mechanism for providing data to shaders, they are not available in WebGL, so applications may need to consider fallbacks."]}),"\n",(0,t.jsxs)(r.p,{children:["The alternative mechanism is ",(0,t.jsx)(r.strong,{children:"attributes"}),", a structured and performant mechanism that works on both WebGPU and WebGL, though they are more rigid and have a number of limitations."]}),"\n",(0,t.jsx)(r.h2,{id:"storage-buffer-basics",children:"Storage Buffer Basics"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"const buffer = device.createBuffer({usage: Buffer.STORAGE, ...});\n\nmodel.setBindings({\n  ...\n})\n"})}),"\n",(0,t.jsx)(r.p,{children:"Storage buffers have many similarities to uniform buffers."}),"\n",(0,t.jsx)(r.p,{children:"TBA"})]})}function f(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>o});var t=s(6540);const n={},a=t.createContext(n);function i(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);