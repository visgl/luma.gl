"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[2076],{8673:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>d});var a=l(4848),r=l(8453);const t={},i="Installing",s={id:"developer-guide/installing",title:"Installing",description:"luma.gl is published as a suite of npm modules. Each module responsible for a particular part of the rendering stack.",source:"@site/../docs/developer-guide/installing.md",sourceDirName:"developer-guide",slug:"/developer-guide/installing",permalink:"/docs/developer-guide/installing",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/master/docs/../docs/developer-guide/installing.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Developer Guide",permalink:"/docs/developer-guide/"},next:{title:"Debugging",permalink:"/docs/developer-guide/debugging"}},o={},d=[{value:"A Minimal Install",id:"a-minimal-install",level:2},{value:"A Typical Install",id:"a-typical-install",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"installing",children:"Installing"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"luma.gl"})," is published as a suite of npm modules. Each module responsible for a particular part of the rendering stack."]}),"\n",(0,a.jsx)(n.h2,{id:"a-minimal-install",children:"A Minimal Install"}),"\n",(0,a.jsxs)(n.p,{children:["The most basic module is ",(0,a.jsx)(n.code,{children:"@luma.gl/core"})," which provides an abstract API for writing application code\nthat works with both WebGPU and WebGL."]}),"\n",(0,a.jsxs)(n.p,{children:["However, the ",(0,a.jsx)(n.code,{children:"@luma.gl/core"})," module cannot be used on its own: it relies on being backed up by another module\nthat implements the API. luma.gl provides adapters (implementations of the abstract API)\nthrough the ",(0,a.jsx)(n.code,{children:"@luma.gl/webgl"})," and ",(0,a.jsx)(n.code,{children:"@luma.gl/webgpu"})," modules."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"@luma.gl/core"})," module is not usable on its own. A device adapter module must be imported."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add @luma.gl/core\nyarn add @luma.gl/webgpu\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {webgl2Adapter} '@luma.gl/webgpu';\n\nconst device = await luma.createDevice({type: 'webgpu', adapters: [webgl2Adapter], createCanvasContext: ...});\n"})}),"\n",(0,a.jsx)(n.p,{children:"It is possible to register more than one device adapter to create an application\nthat can work in both WebGL and WebGPU environments."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {webgl2Adapter} '@luma.gl/webgpu';\nimport {webgpuAdapter} '@luma.gl/webgl';\n\nconst webgpuDevice = luma.createDevice({type: 'best-available', adapters: [webgl2Adapter, webgpuAdapter], createCanvasContext: ...});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"a-typical-install",children:"A Typical Install"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"engine"}),": High-level constructs such as ",(0,a.jsx)(n.code,{children:"Model"}),", ",(0,a.jsx)(n.code,{children:"AnimationLoop"})," and ",(0,a.jsx)(n.code,{children:"Geometry"})," that allow a developer to work without worrying about rendering pipeline details."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"webgl"}),": Wrapper classes around WebGL objects such as ",(0,a.jsx)(n.code,{children:"Program"}),", ",(0,a.jsx)(n.code,{children:"Buffer"}),", ",(0,a.jsx)(n.code,{children:"VertexArray"})," that allow a developer to manager the rendering pipeline directly but with a more convenient API."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"shadertools"}),": A system for modularizing and composing shader code."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"debug"}),": Tooling to aid in debugging."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add @luma.gl/core\nyarn add @luma.gl/webgl\nyarn add @luma.gl/engine\nyarn add @luma.gl/shadertools\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Refer to the ",(0,a.jsx)(n.a,{href:"/docs/api-reference",children:"Module Catalog"})," for more information about which luma.gl modules to install."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>i,x:()=>s});var a=l(6540);const r={},t=a.createContext(r);function i(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);