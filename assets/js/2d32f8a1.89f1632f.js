/*! For license information please see 2d32f8a1.89f1632f.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[490],{6387:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=r(4848),d=r(8453);const o={},s="CommandEncoder",c={id:"api-reference/core/resources/command-encoder",title:"CommandEncoder",description:"A command encoder offering GPU memory copying operations.",source:"@site/../docs/api-reference/core/resources/command-encoder.md",sourceDirName:"api-reference/core/resources",slug:"/api-reference/core/resources/command-encoder",permalink:"/docs/api-reference/core/resources/command-encoder",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-reference/core/resources/command-encoder.md",tags:[],version:"current",frontMatter:{}},i={},l=[{value:"Types",id:"types",level:2},{value:"<code>CommandEncoderProps</code>",id:"commandencoderprops",level:3},{value:"Members",id:"members",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>constructor(props: CommandEncoderProps)</code>",id:"constructorprops-commandencoderprops",level:3},{value:"setImageData(options : Object) : Texture2D",id:"setimagedataoptions--object--texture2d",level:3},{value:"setSubImageData(options : Object) : Texture2D",id:"setsubimagedataoptions--object--texture2d",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"commandencoder",children:"CommandEncoder"}),"\n",(0,t.jsx)(n.p,{children:"A command encoder offering GPU memory copying operations."}),"\n",(0,t.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,t.jsx)(n.h3,{id:"commandencoderprops",children:(0,t.jsx)(n.code,{children:"CommandEncoderProps"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"members",children:"Members"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"device"}),": ",(0,t.jsx)(n.code,{children:"Device"})," - holds a reference to the ",(0,t.jsx)(n.code,{children:"Device"})," that created this ",(0,t.jsx)(n.code,{children:"CommandEncoder"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"handle"}),": ",(0,t.jsx)(n.code,{children:"unknown"})," - holds the underlying WebGL or WebGPU shader object"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"props"}),": ",(0,t.jsx)(n.code,{children:"CommandEncoderProps"})," - holds a copy of the ",(0,t.jsx)(n.code,{children:"CommandEncoderProps"})," used to create this ",(0,t.jsx)(n.code,{children:"CommandEncoder"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"constructorprops-commandencoderprops",children:(0,t.jsx)(n.code,{children:"constructor(props: CommandEncoderProps)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"CommandEncoder"})," is an abstract class and cannot be instantiated directly. Create with ",(0,t.jsx)(n.code,{children:"device.beginCommandEncoder(...)"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"setimagedataoptions--object--texture2d",children:"setImageData(options : Object) : Texture2D"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"  Texture.setImageData({\n    target = this.target,\n    pixels = null,\n    data = null,\n    width,\n    height,\n    level = 0,\n    type,\n    offset = 0,\n    border = 0,\n    compressed = false,\n    parameters= {}\n  });\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," (*) - Image data. Can be one of several data types see table below"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pixels"})," (*) - alternative to ",(0,t.jsx)(n.code,{children:"data"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"width"})," (GLint) -"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"height"})," (GLint) -"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"level"})," (GLint) -"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"format"})," (GLenum) - format of image data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"type"})," (GLenum)"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"format of array (autodetect from type) or"}),"\n",(0,t.jsx)(n.li,{children:"(WEBGL2) format of buffer"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"offset"})," (Number) - (WEBGL2) offset from start of buffer"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"border"})," (GLint) - must be 0."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"compressed"})," (Boolean) -"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"parameters"})," (Object) - GL parameters to be temporarily applied (most of the time, pixelStorage parameters) when updating the texture."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Valid image data types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"null"})," - create empty texture of specified format"]}),"\n",(0,t.jsxs)(n.li,{children:["Typed array - initializes from image data in typed array according to ",(0,t.jsx)(n.code,{children:"format"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Buffer"}),"|",(0,t.jsx)(n.code,{children:"WebGLBuffer"})," - (WEBGL2) initialized from image data in WebGLBuffer accoeding to ",(0,t.jsx)(n.code,{children:"format"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HTMLImageElement"}),"|",(0,t.jsx)(n.code,{children:"Image"})," - Initializes with content of image. Auto deduces texture width/height from image."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HTMLCanvasElement"})," - Inits with contents of canvas. Auto width/height."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HTMLVideoElement"})," - Creates video texture that continuously updates. Auto width/height."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"setsubimagedataoptions--object--texture2d",children:"setSubImageData(options : Object) : Texture2D"}),"\n",(0,t.jsx)(n.p,{children:"Redefines an area of an existing texture\nNote: does not allocate storage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  Texture.setSubImageData({\n    target = this.target,\n    pixels = null,\n    data = null,\n    x = 0,\n    y = 0,\n    width,\n    height,\n    level = 0,\n    type,\n    compressed = false,\n    offset = 0,\n    border = 0,\n    parameters = {}\n  });\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"})," (",(0,t.jsx)(n.code,{children:"GLint"}),") - xOffset from where texture to be updated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"y"})," (",(0,t.jsx)(n.code,{children:"GLint"}),") - yOffset from where texture to be updated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"width"})," (",(0,t.jsx)(n.code,{children:"GLint"}),") - width of the sub image to be updated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"height"})," (",(0,t.jsx)(n.code,{children:"GLint"}),") - height of the sub image to be updated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"level"})," (",(0,t.jsx)(n.code,{children:"GLint"}),") - mip level to be updated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"format"})," (",(0,t.jsx)(n.code,{children:"GLenum"}),") - internal format of image data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"typ"})," (",(0,t.jsx)(n.code,{children:"GLenum"}),") - format of array (autodetect from type) or (WEBGL2) format of buffer or ArrayBufferView"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dataFormat"})," (",(0,t.jsx)(n.code,{children:"GLenum"}),") - format of image data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"offset"})," (",(0,t.jsx)(n.code,{children:"Number"}),") - (WEBGL2) offset from start of buffer"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"border"})," (",(0,t.jsx)(n.code,{children:"GLint"}),") - must be 0."]}),"\n",(0,t.jsx)(n.li,{children:"parameters - temporary settings to be applied, can be used to supply pixel store settings."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["See also ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D",children:"gl.compressedTexSubImage2D"}),", ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D",children:"gl.texSubImage2D"}),", ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindTexture",children:"gl.bindTexture"}),", ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer",children:"gl.bindBuffer"})]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1020:(e,n,r)=>{var t=r(6540),d=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,c=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,r){var t,o={},l=null,a=null;for(t in void 0!==r&&(l=""+r),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(a=n.ref),n)s.call(n,t)&&!i.hasOwnProperty(t)&&(o[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===o[t]&&(o[t]=n[t]);return{$$typeof:d,type:e,key:l,ref:a,props:o,_owner:c.current}}n.Fragment=o,n.jsx=l,n.jsxs=l},4848:(e,n,r)=>{e.exports=r(1020)},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var t=r(6540);const d={},o=t.createContext(d);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);