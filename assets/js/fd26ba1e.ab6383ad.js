"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[8744],{8172:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>u,contentTitle:()=>c,default:()=>l,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var t=s(4848),i=s(8453);const n={},c="TextureView",o={id:"api-reference/core/resources/texture-view",title:"TextureView",description:"A TextureView is a view onto some subset of the texture subresources defined by a particular Texture.",source:"@site/../docs/api-reference/core/resources/texture-view.md",sourceDirName:"api-reference/core/resources",slug:"/api-reference/core/resources/texture-view",permalink:"/docs/api-reference/core/resources/texture-view",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/master/docs/../docs/api-reference/core/resources/texture-view.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Texture",permalink:"/docs/api-reference/core/resources/texture"},next:{title:"TransformFeedback",permalink:"/docs/api-reference/core/resources/transform-feedback"}},u={},d=[{value:"Subresource Selection",id:"subresource-selection",level:3},{value:"Render Extent",id:"render-extent",level:3},{value:"TextureView Aliasing",id:"textureview-aliasing",level:3},{value:"Usage",id:"usage",level:2},{value:"Types",id:"types",level:2},{value:"TextureViewProps",id:"textureviewprops",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>constructor</code>",id:"constructor",level:3}];function a(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"textureview",children:"TextureView"})}),"\n",(0,t.jsxs)(r.p,{children:["A ",(0,t.jsx)(r.code,{children:"TextureView"})," is a view onto some subset of the texture subresources defined by a particular ",(0,t.jsx)(r.code,{children:"Texture"}),"."]}),"\n",(0,t.jsx)(r.h3,{id:"subresource-selection",children:"Subresource Selection"}),"\n",(0,t.jsxs)(r.p,{children:["The set of texture subresources of a texture view view, is the subset of the subresources\nof the associated ",(0,t.jsx)(r.code,{children:"Texture"})," for which each subresource  satisfies the following:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"The mipmap level of s is \u2265 props.baseMipLevel and < props.baseMipLevel + props.mipLevelCount."}),"\n",(0,t.jsx)(r.li,{children:"The array layer of s is \u2265 props.baseArrayLayer and < props.baseArrayLayer + props.arrayLayerCount."}),"\n",(0,t.jsx)(r.li,{children:"The aspect of s is in the set of aspects of props.aspect."}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"render-extent",children:"Render Extent"}),"\n",(0,t.jsxs)(r.p,{children:['There is an implicit "render extent" associated with a renderable ',(0,t.jsx)(r.code,{children:"TextureView"}),".\nThis render extent depends on the baseMipLevel."]}),"\n",(0,t.jsx)(r.h3,{id:"textureview-aliasing",children:"TextureView Aliasing"}),"\n",(0,t.jsxs)(r.p,{children:["Two ",(0,t.jsx)(r.code,{children:"TextureView"})," objects are texture-view-aliasing if and only if their sets of subresources intersect."]}),"\n",(0,t.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"const texture = device.createTexture({...});\nconst textureView = texture.createView({...});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"types",children:"Types"}),"\n",(0,t.jsx)(r.h3,{id:"textureviewprops",children:"TextureViewProps"}),"\n",(0,t.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"constructor",children:(0,t.jsx)(r.code,{children:"constructor"})}),"\n",(0,t.jsxs)(r.p,{children:["The constructor for ",(0,t.jsx)(r.code,{children:"TextureView"})," should not be called directly. Use ",(0,t.jsx)(r.code,{children:"Texture.createView()"})," instead."]})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var t=s(6540);const i={},n=t.createContext(i);function c(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);