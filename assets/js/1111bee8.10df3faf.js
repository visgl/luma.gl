/*! For license information please see 1111bee8.10df3faf.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[4107],{2917:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});var d=s(4848),n=s(8453);const c={},i="RenderPass",t={id:"api-reference/core/resources/render-pass",title:"RenderPass",description:"Usage",source:"@site/../docs/api-reference/core/resources/render-pass.md",sourceDirName:"api-reference/core/resources",slug:"/api-reference/core/resources/render-pass",permalink:"/docs/api-reference/core/resources/render-pass",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-reference/core/resources/render-pass.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Framebuffer",permalink:"/docs/api-reference/core/resources/framebuffer"},next:{title:"RenderPipeline",permalink:"/docs/api-reference/core/resources/render-pipeline"}},o={},l=[{value:"Usage",id:"usage",level:2},{value:"Clearing the screen",id:"clearing-the-screen",level:2},{value:"Viewport size",id:"viewport-size",level:2},{value:"Types",id:"types",level:2},{value:"<code>RenderPassProps</code>",id:"renderpassprops",level:3},{value:"Members",id:"members",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>constructor()</code>",id:"constructor",level:3},{value:"<code>endPass(): void</code>",id:"endpass-void",level:3},{value:"<code>pushDebugGroup(groupLabel: string): void</code>",id:"pushdebuggroupgrouplabel-string-void",level:3},{value:"<code>popDebugGroup(): void</code>",id:"popdebuggroup-void",level:3},{value:"<code>insertDebugMarker(markerLabel: string): void</code>",id:"insertdebugmarkermarkerlabel-string-void",level:3}];function a(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.h1,{id:"renderpass",children:"RenderPass"}),"\n",(0,d.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,d.jsxs)(r.p,{children:["To draw to the screen in luma.gl, simply create a ",(0,d.jsx)(r.code,{children:"RenderPass"})," by calling\n",(0,d.jsx)(r.code,{children:"device.beginRenderPass()"})," and start rendering. When done rendering, call\n",(0,d.jsx)(r.code,{children:"renderPass.end()"})]}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-typescript",children:"  // A renderpass without parameters uses the default framebuffer of the device's default CanvasContext \n  const renderPass = device.beginRenderPass();\n  model.draw();\n  renderPass.end();\n  device.submit();\n"})}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"device.canvasContext.getDefaultFramebuffer()"})," returns a special framebuffer that lets you render to screen (into the swap chain). This framebuffer is used by default when a ",(0,d.jsx)(r.code,{children:"device.beginRenderPass()"})," is called without providing a ",(0,d.jsx)(r.code,{children:"framebuffer"}),", equivalent to:"]}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-typescript",children:"  const renderPass = device.beginRenderPass({framebuffer: device.canvasContext.getDefaultFramebuffer()});\n  ...\n"})}),"\n",(0,d.jsx)(r.h2,{id:"clearing-the-screen",children:"Clearing the screen"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"Framebuffer"})," attachments are cleared by default when a RenderPass starts. More control is provided via the ",(0,d.jsx)(r.code,{children:"clearColor"})," parameter, setting this will clear the attachments to the corresponding color. The default clear color is fully transparent ",(0,d.jsx)(r.code,{children:"[0, 0, 0, 0]"}),". Clearing can also be disabled by setting ",(0,d.jsx)(r.code,{children:"loadOp='load'"}),"."]}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-typescript",children:"  const renderPass = device.beginRenderPass({clearColor: [0, 0, 0, 1]});\n  model.draw();\n  renderPass.end();\n  device.submit();\n"})}),"\n",(0,d.jsx)(r.p,{children:"Depth and stencil buffers are also cleared to default values:"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-typescript",children:"  const renderPass = device.beginRenderPass({\n    clearColor: [0, 0, 0, 1],\n    depthClearValue: 1,\n    stencilClearValue: 0\n  });\n  renderPass.end();\n  device.submit();\n"})}),"\n",(0,d.jsx)(r.h2,{id:"viewport-size",children:"Viewport size"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"RenderPassProps.parameters.viewport"})," controls how the rendered graphics is mapped to window pixels / texels (more precisely, the affine transformation of x and y from normalized device coordinates to window coordinates)."]}),"\n",(0,d.jsxs)(r.p,{children:["If no value for the ",(0,d.jsx)(r.code,{children:"viewport"})," parameter is provided, the following defaults will be applied."]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["If no ",(0,d.jsx)(r.code,{children:"framebuffer"})," is specified, the size of the canvas drawing buffer will be used (",(0,d.jsx)(r.code,{children:"device.getCanvasContext().getDrawingBufferSize()"}),")"]}),"\n",(0,d.jsxs)(r.li,{children:["If a framebuffer is specified, the ",(0,d.jsx)(r.code,{children:"width"})," and ",(0,d.jsx)(r.code,{children:"height"})," of the framebuffer will be used."]}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"types",children:"Types"}),"\n",(0,d.jsx)(r.h3,{id:"renderpassprops",children:(0,d.jsx)(r.code,{children:"RenderPassProps"})}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Property"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Default"}),(0,d.jsx)(r.th,{children:"Description"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"framebuffer?"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"Framebuffer"})}),(0,d.jsx)(r.td,{children:"N/A"}),(0,d.jsx)(r.td,{children:"Provides render target textures and depth/stencil texture"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"parameters?"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"Parameters"})}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:"GPU pipeline parameters"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"clearColor?"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"number[] | false"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"[0, 0, 0, 0]"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"loadOp"}),"?"]}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"'load'"}),", ",(0,d.jsx)(r.code,{children:"'clear'"})]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'clear'"})}),(0,d.jsx)(r.td,{children:"Load operation to perform on texture prior to executing the render pass. Default: 'clear'."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"storeOp"}),"?"]}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"'store'"}),", ",(0,d.jsx)(r.code,{children:"'discard'"})]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'store'"})}),(0,d.jsx)(r.td,{children:"The store operation to perform on texture after executing the render pass. Default: 'store'."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"depthClearValue"}),"?"]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"number"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"1"})}),(0,d.jsx)(r.td,{children:'Value to clear depth component to prior to executing the render pass, if depthLoadOp is "clear". 0.0-1.0.'})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"depthLoadOp"}),"?"]}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"'load'"}),", ",(0,d.jsx)(r.code,{children:"'clear'"})]}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:"Load operation to perform on depth component prior to executing the render pass. Default 'clear'."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"depthStoreOp"}),"?"]}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"'store'"}),", ",(0,d.jsx)(r.code,{children:"'discard'"})]}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:"Store operation` to perform on depth component after executing the render pass. Default 'store'."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"depthReadOnly"}),"?"]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:"Depth component is read only."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"stencilClearValue"}),"?"]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"number "})}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:'Value to clear stencil component to prior to executing the render pass, if stencilLoadOp is "clear".'})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"stencilLoadOp"}),"?"]}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"'clear'"}),", ",(0,d.jsx)(r.code,{children:"'load'"})]}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:"Load operation to perform on stencil component prior to executing the render pass. Prefer clearing."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"stencilStoreOp"}),"?"]}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"'store'"}),", ",(0,d.jsx)(r.code,{children:"'discard'"})]}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:"Store operation to perform on stencil component after executing the render pass."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"stencilReadOnly"}),"?"]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{children:"Stencil component is read only."})]})]})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["Clearing can be disabled by setting ",(0,d.jsx)(r.code,{children:"loadOp='load'"})," however this may have a small performance cost as GPUs are optimized for clearing."]}),"\n",(0,d.jsxs)(r.li,{children:["WebGL does not support setting ",(0,d.jsx)(r.code,{children:"storeOp: 'discard'"})," for just some attachments, it is all or nothing."]}),"\n",(0,d.jsx)(r.li,{children:"Currently luma.gl doesn't support specifying per-rendertarget properties"}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"members",children:"Members"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"device"}),": ",(0,d.jsx)(r.code,{children:"Device"})," - holds a reference to the ",(0,d.jsx)(r.code,{children:"Device"})," that created this ",(0,d.jsx)(r.code,{children:"RenderPass"}),"."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"handle"}),": ",(0,d.jsx)(r.code,{children:"unknown"})," - holds the underlying WebGL or WebGPU shader object"]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"props"}),": ",(0,d.jsx)(r.code,{children:"RenderPassProps"})," - holds a copy of the ",(0,d.jsx)(r.code,{children:"RenderPassProps"})," used to create this ",(0,d.jsx)(r.code,{children:"RenderPass"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(r.h3,{id:"constructor",children:(0,d.jsx)(r.code,{children:"constructor()"})}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"RenderPass"})," is an abstract class and cannot be instantiated directly. Create with ",(0,d.jsx)(r.code,{children:"device.beginRenderPass(...)"}),"."]}),"\n",(0,d.jsx)(r.h3,{id:"endpass-void",children:(0,d.jsx)(r.code,{children:"endPass(): void"})}),"\n",(0,d.jsx)(r.p,{children:"Must be called after all draw calls have been completed to guarantee rendering. Frees up any GPU resources associated with this render pass."}),"\n",(0,d.jsx)(r.h3,{id:"pushdebuggroupgrouplabel-string-void",children:(0,d.jsx)(r.code,{children:"pushDebugGroup(groupLabel: string): void"})}),"\n",(0,d.jsx)(r.p,{children:"Adds a debug group (implementation dependent)."}),"\n",(0,d.jsx)(r.h3,{id:"popdebuggroup-void",children:(0,d.jsx)(r.code,{children:"popDebugGroup(): void"})}),"\n",(0,d.jsx)(r.p,{children:"Removes a debug group (implementation dependent)."}),"\n",(0,d.jsx)(r.h3,{id:"insertdebugmarkermarkerlabel-string-void",children:(0,d.jsx)(r.code,{children:"insertDebugMarker(markerLabel: string): void"})}),"\n",(0,d.jsx)(r.p,{children:"Adds a debug marker (implementation dependent)."})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},1020:(e,r,s)=>{var d=s(6540),n=Symbol.for("react.element"),c=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,t=d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,s){var d,c={},l=null,a=null;for(d in void 0!==s&&(l=""+s),void 0!==r.key&&(l=""+r.key),void 0!==r.ref&&(a=r.ref),r)i.call(r,d)&&!o.hasOwnProperty(d)&&(c[d]=r[d]);if(e&&e.defaultProps)for(d in r=e.defaultProps)void 0===c[d]&&(c[d]=r[d]);return{$$typeof:n,type:e,key:l,ref:a,props:c,_owner:t.current}}r.Fragment=c,r.jsx=l,r.jsxs=l},4848:(e,r,s)=>{e.exports=s(1020)},8453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>t});var d=s(6540);const n={},c=d.createContext(n);function i(e){const r=d.useContext(c);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),d.createElement(c.Provider,{value:r},e.children)}}}]);