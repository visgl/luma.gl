/*! For license information please see be4ca489.005ea987.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[1769],{6653:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=n(4848),t=n(8453);const l={},c="picking",o={id:"api-reference/shadertools/shader-modules/picking",title:"picking",description:"The picking shader module in @luma.gl/shadertools is deprecated. Use the picking modules in @luma.gl/engine instead.",source:"@site/../docs/api-reference/shadertools/shader-modules/picking.md",sourceDirName:"api-reference/shadertools/shader-modules",slug:"/api-reference/shadertools/shader-modules/picking",permalink:"/docs/api-reference/shadertools/shader-modules/picking",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-reference/shadertools/shader-modules/picking.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"gouraudMaterial",permalink:"/docs/api-reference/shadertools/shader-modules/gouraud-material"},next:{title:"project",permalink:"/docs/api-reference/shadertools/shader-modules/project"}},s={},d=[{value:"Usage",id:"usage",level:2},{value:"JavaScript Functions",id:"javascript-functions",level:2},{value:"getUniforms()",id:"getuniforms",level:3},{value:"Vertex Shader Functions",id:"vertex-shader-functions",level:2},{value:"picking_setPickingColor()",id:"picking_setpickingcolor",level:3},{value:"picking_setPickingAttribute",id:"picking_setpickingattribute",level:3},{value:"Fragment Shader Functions",id:"fragment-shader-functions",level:2},{value:"picking_filterColor",id:"picking_filtercolor",level:3},{value:"picking_filterPickingColor()",id:"picking_filterpickingcolor",level:3},{value:"picking_filterPickingColor()",id:"picking_filterpickingcolor-1",level:3},{value:"Remarks",id:"remarks",level:2}];function h(e){const i={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"picking",children:"picking"}),"\n",(0,r.jsx)("p",{class:"badges",children:(0,r.jsx)("img",{src:"https://img.shields.io/badge/Deprecated-from-v9.1-red.svg?style=flat-square",alt:"Deprecated in v9.1"})}),"\n",(0,r.jsx)(i.admonition,{type:"caution",children:(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"picking"})," shader module in ",(0,r.jsx)(i.code,{children:"@luma.gl/shadertools"})," is deprecated. Use the picking modules in ",(0,r.jsx)(i.code,{children:"@luma.gl/engine"})," instead."]})}),"\n",(0,r.jsx)(i.p,{children:"Provides support for color-based picking."}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"picking"})," modules supports picking and highlighting for both instanced and non-instanced data:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["pick a specific ",(0,r.jsx)(i.em,{children:"instance"})," in an instanced draw call"]}),"\n",(0,r.jsxs)(i.li,{children:["highlight all fragments of an ",(0,r.jsx)(i.em,{children:"instance"})," based on its picking color"]}),"\n",(0,r.jsx)(i.li,{children:'pick "group of primitives" with the same picking color in non-instanced draw-calls'}),"\n",(0,r.jsx)(i.li,{children:'highlight "group of primitives" with the same picking color in non-instanced draw-calls'}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Color based picking lets the application draw a primitive with a color that can later be used to index this specific primitive."}),"\n",(0,r.jsx)(i.p,{children:"Highlighting allows application to specify a picking color corresponding to an object that need to be highlighted and the highlight color to be used."}),"\n",(0,r.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(i.p,{children:"In your vertex shader, your inform the picking module what object we are currently rendering by supplying a picking color, perhaps from an attribute."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"attribute vec3 aPickingColor;\nmain() {\n  picking_setPickingColor(aPickingColor);\n  ...\n}\n"})}),"\n",(0,r.jsxs)(i.p,{children:["In your fragment shader, you simply apply (call) the ",(0,r.jsx)(i.code,{children:"picking_filterColor"})," filter function at the very end of the shader. This will return the normal color, or the highlight color, or the picking color, as appropriate."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"main() {\n  gl_FragColor = ...\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n"})}),"\n",(0,r.jsxs)(i.p,{children:["In your fragment shader, you simply apply (call) the ",(0,r.jsx)(i.code,{children:"picking_filterPickingColor"})," filter function at the very end of the shader. This will return the normal color, or the highlight color, or the picking color, as appropriate."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-glsl",children:"main() {\n  gl_FragColor = ...\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n"})}),"\n",(0,r.jsxs)(i.p,{children:["If highlighting is not needed, you simply apply (call) the ",(0,r.jsx)(i.code,{children:"picking_filterPickingColor"})," filter function at the very end of the shader. This will return the normal color or the picking color, as appropriate."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"main() {\n  gl_FragColor = ...\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n"})}),"\n",(0,r.jsxs)(i.p,{children:["If you would like to apply the highlight color to the currently selected element call ",(0,r.jsx)(i.code,{children:"picking_filterHighlightColor"})," before calling ",(0,r.jsx)(i.code,{children:"picking_filterPickingColor"}),". You can also apply other filters on the non-picking color (vertex or highlight color) by placing those instruction between these two function calls."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"main() {\n  gl_FragColor = ...\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n   ... apply any filters on gl_FragColor ...\n gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n"})}),"\n",(0,r.jsx)(i.h2,{id:"javascript-functions",children:"JavaScript Functions"}),"\n",(0,r.jsx)(i.h3,{id:"getuniforms",children:"getUniforms()"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"getUniforms()"})," takes an object with key/value pairs, returns an object with key/value pairs representing the uniforms that the ",(0,r.jsx)(i.code,{children:"picking"})," module shaders need."]}),"\n",(0,r.jsx)(i.p,{children:'Uniforms for the picking module, which renders picking colors and highlighted item.\nWhen active, renders picking colors, assumed to be rendered to off-screen "picking" buffer.\nWhen inactive, renders normal colors, with the exception of selected object which is rendered with highlight'}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Setting"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"isActive"}),"?: boolean"]}),(0,r.jsx)(i.td,{children:"Whether in picking or normal rendering (+highlighting) mode"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"isAttribute"}),": boolean"]}),(0,r.jsx)(i.td,{children:"Set to true when picking an attribute value instead of object index"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"useFloatColors"}),"?: boolean"]}),(0,r.jsx)(i.td,{children:"Color range 0-1 or 0-255"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"isHighlightActive"}),"?: boolean"]}),(0,r.jsx)(i.td,{children:"Do we have a highlighted item?"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"highlightedObjectColor"}),"?: NumberArray"]}),(0,r.jsx)(i.td,{children:"Set to a picking color to visually highlight that item"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"highlightColor"}),"?: NumberArray"]}),(0,r.jsx)(i.td,{children:'Color of visual highlight of "selected" item'})]})]})]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"isActive"}),' - When true, renders picking colors. Set when rendering to off-screen "picking" buffer. When false, renders normal colors, with the exception of selected object which is rendered with highlight']}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"vertex-shader-functions",children:"Vertex Shader Functions"}),"\n",(0,r.jsx)(i.h3,{id:"picking_setpickingcolor",children:"picking_setPickingColor()"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"void picking_setPickingColor(vec3 pickingColor)\n"})}),"\n",(0,r.jsxs)(i.p,{children:["Sets the color that will be returned by the fragment shader if color based picking is enabled. Typically set from a ",(0,r.jsx)(i.code,{children:"pickingColor"})," uniform or a ",(0,r.jsx)(i.code,{children:"pickingColors"})," attribute (e.g. when using instanced rendering, to identify the actual instance that was picked)."]}),"\n",(0,r.jsx)(i.h3,{id:"picking_setpickingattribute",children:"picking_setPickingAttribute"}),"\n",(0,r.jsx)(i.p,{children:"Sets the attribute value that needs to be picked."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"void picking_setPickingAttribute(float value)"}),"\n",(0,r.jsx)(i.code,{children:"void picking_setPickingAttribute(vec2 value)"}),"\n",(0,r.jsx)(i.code,{children:"void picking_setPickingAttribute(vec3 value)"})]}),"\n",(0,r.jsx)(i.h2,{id:"fragment-shader-functions",children:"Fragment Shader Functions"}),"\n",(0,r.jsx)(i.h3,{id:"picking_filtercolor",children:"picking_filterColor"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"fn picking_filterColor(color: vec4<f32>) -> vec4<f32>\nvec4 picking_filterColor(vec4 color)\n"})}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Picking Enabled"}),(0,r.jsx)(i.th,{children:"Item Highlighted"}),(0,r.jsx)(i.th,{children:"Returned color"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u2705"}),(0,r.jsx)(i.td,{children:"\u2013"}),(0,r.jsx)(i.td,{children:"Returns picking color (representing index of this color)"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{children:"\u2705"}),(0,r.jsx)(i.td,{children:'Returns the current highlight color (to show this item as "selected")'})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsx)(i.td,{children:"\u274c"}),(0,r.jsxs)(i.td,{children:["returns the original color (unmodified ",(0,r.jsx)(i.code,{children:"color"})," argument)"]})]})]})]}),"\n",(0,r.jsx)(i.h3,{id:"picking_filterpickingcolor",children:"picking_filterPickingColor()"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:"vec4 picking_filterPickingColor(vec4 color)\n"})}),"\n",(0,r.jsxs)(i.p,{children:["If picking active, returns the current vertex's picking color set by ",(0,r.jsx)(i.code,{children:"picking_setPickingColor"}),", otherwise returns its argument unmodified."]}),"\n",(0,r.jsx)(i.p,{children:"Returns picking highlight color if the pixel belongs to currently selected model, otherwise returns its argument unmodified."}),"\n",(0,r.jsx)(i.h3,{id:"picking_filterpickingcolor-1",children:"picking_filterPickingColor()"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"vec4 picking_filterPickingColor(vec4 color)"})}),"\n",(0,r.jsxs)(i.p,{children:["If picking active, returns the current vertex's picking color set by ",(0,r.jsx)(i.code,{children:"picking_setPickingColor"}),", otherwise returns its argument unmodified."]}),"\n",(0,r.jsx)(i.h2,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["It is recommended that ",(0,r.jsx)(i.code,{children:"picking_filterPickingColor()"})," is called last in a fragment shader, as the picking color (returned when picking is enabled) must not be modified in any way (and alpha must remain 1) or picking results will not be correct."]}),"\n"]})]})}function a(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1020:(e,i,n)=>{var r=n(6540),t=Symbol.for("react.element"),l=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function d(e,i,n){var r,l={},d=null,h=null;for(r in void 0!==n&&(d=""+n),void 0!==i.key&&(d=""+i.key),void 0!==i.ref&&(h=i.ref),i)c.call(i,r)&&!s.hasOwnProperty(r)&&(l[r]=i[r]);if(e&&e.defaultProps)for(r in i=e.defaultProps)void 0===l[r]&&(l[r]=i[r]);return{$$typeof:t,type:e,key:d,ref:h,props:l,_owner:o.current}}i.Fragment=l,i.jsx=d,i.jsxs=d},4848:(e,i,n)=>{e.exports=n(1020)},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var r=n(6540);const t={},l=r.createContext(t);function c(e){const i=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(l.Provider,{value:i},e.children)}}}]);