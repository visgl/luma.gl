"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[8224],{7754:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>o});var t=a(4848),c=a(8453);const n={},s="Adapter",d={id:"api-reference/core/adapter",title:"Adapter",description:"An Adapter is a factory that creates Device instances for a specific backend (e.g. WebGPU or WebGL).",source:"@site/../docs/api-reference/core/adapter.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/adapter",permalink:"/docs/api-reference/core/adapter",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/master/docs/../docs/api-reference/core/adapter.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"luma",permalink:"/docs/api-reference/core/luma"},next:{title:"Device",permalink:"/docs/api-reference/core/device"}},i={},o=[{value:"Usage",id:"usage",level:2},{value:"Members",id:"members",level:2},{value:"<code>type</code>",id:"type",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>isSupported()</code>",id:"issupported",level:3},{value:"<code>create()</code>",id:"create",level:3},{value:"<code>attach()</code>",id:"attach",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"adapter",children:"Adapter"})}),"\n",(0,t.jsx)("p",{class:"badges",children:(0,t.jsx)("img",{src:"https://img.shields.io/badge/From-v9.1-blue.svg?style=flat-square",alt:"From-v9.1"})}),"\n",(0,t.jsxs)(r.p,{children:["An ",(0,t.jsx)(r.code,{children:"Adapter"})," is a factory that creates ",(0,t.jsx)(r.a,{href:"./device",children:(0,t.jsx)(r.code,{children:"Device"})})," instances for a specific backend (e.g. WebGPU or WebGL).\nEach GPU backend exports a singleton adapter instance that is used to create devices for that GPU backend."]}),"\n",(0,t.jsxs)(r.p,{children:["Adapters can be used directly to create and attach devices, but they are usually imported and used via the ",(0,t.jsx)(r.a,{href:"./luma",children:(0,t.jsx)(r.code,{children:"luma"})})," API through\nmethods like [",(0,t.jsx)(r.code,{children:"luma.createDevice"}),"]."]}),"\n",(0,t.jsxs)(r.p,{children:["Note: an adapter may perform asynchronous loading of adapter code, debug libraries, etc before creating the ",(0,t.jsx)(r.code,{children:"Device"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(r.p,{children:"Register the WebGL backend, then create a WebGL2 context, auto creating a canvas"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {webgl2Adapter} from '@luma.gl/webgl';\nluma.registerAdapters([webgl2Adapter]);\nconst webglDevice = await luma.createDevice({type: 'webgl', createCanvasContext: ...});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"members",children:"Members"}),"\n",(0,t.jsx)(r.h3,{id:"type",children:(0,t.jsx)(r.code,{children:"type"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"type: string;\n"})}),"\n",(0,t.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"issupported",children:(0,t.jsx)(r.code,{children:"isSupported()"})}),"\n",(0,t.jsx)(r.p,{children:"Checks if this adapter is supported in the current environment/browser."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"adapter.isSupported(): boolean;\n"})}),"\n",(0,t.jsx)(r.h3,{id:"create",children:(0,t.jsx)(r.code,{children:"create()"})}),"\n",(0,t.jsx)(r.p,{children:"Creates a device for this adapter's backend."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"create(props: DeviceProps): Promise<Device>;\n"})}),"\n",(0,t.jsx)(r.h3,{id:"attach",children:(0,t.jsx)(r.code,{children:"attach()"})}),"\n",(0,t.jsx)(r.p,{children:"Attaches a device to a GPU device handle from this backend."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"attach?(handle: unknown): Promise<Device>;\n"})})]})}function h(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,a)=>{a.d(r,{R:()=>s,x:()=>d});var t=a(6540);const c={},n=t.createContext(c);function s(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);