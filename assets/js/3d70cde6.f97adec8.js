"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[2099],{9538:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var s=r(4848),a=r(8453);const t={},d="FAQ",c={id:"faq",title:"FAQ",description:"How do I draw to the screen in luma.gl?",source:"@site/../docs/faq.md",sourceDirName:".",slug:"/faq",permalink:"/docs/faq",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/master/docs/../docs/faq.md",tags:[],version:"current",frontMatter:{}},l={},o=[{value:"How do I draw to the screen in luma.gl?",id:"how-do-i-draw-to-the-screen-in-lumagl",level:2},{value:"How do I clear the screen in luma.gl?",id:"how-do-i-clear-the-screen-in-lumagl",level:2}];function i(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"faq",children:"FAQ"})}),"\n",(0,s.jsx)(n.h2,{id:"how-do-i-draw-to-the-screen-in-lumagl",children:"How do I draw to the screen in luma.gl?"}),"\n",(0,s.jsxs)(n.p,{children:["Simply create a ",(0,s.jsx)(n.code,{children:"RenderPass"})," and start rendering."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"  // A renderpass without parameters uses the default framebuffer of the device's default CanvasContext \n  const renderPass = device.beginRenderPass();\n  model.draw(renderPass);\n  renderPass.end();\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"device.getDefaultCanvasContext().getDefaultFramebuffer()"})," returns a special framebuffer that lets you render to screen (into the swap chain). This framebuffer is used by default when a ",(0,s.jsx)(n.code,{children:"device.beginRenderPass()"})," is called without providing a ",(0,s.jsx)(n.code,{children:"framebuffer"}),", equivalent to:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"  const renderPass = device.beginRenderPass({framebuffer: device.getDefaultCanvasContext().getDefaultFramebuffer()});\n  ...\n"})}),"\n",(0,s.jsx)(n.h2,{id:"how-do-i-clear-the-screen-in-lumagl",children:"How do I clear the screen in luma.gl?"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Framebuffer"})," attachments are cleared by default when a RenderPass starts. More control is provided via the ",(0,s.jsx)(n.code,{children:"clearColor"})," parameter, setting this will clear the attachments to the corresponding color. The default clear color is fully transparent ",(0,s.jsx)(n.code,{children:"[0, 0, 0, 0]"}),". Clearing can also be disabled by setting ",(0,s.jsx)(n.code,{children:"loadOp='load'"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"  const renderPass = device.beginRenderPass({clearColor: [0, 0, 0, 1]});\n  model.draw(renderPass);\n  renderPass.end();\n"})}),"\n",(0,s.jsx)(n.p,{children:"Depth and stencil buffers are also cleared to default values:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"  const renderPass = device.beginRenderPass({\n    clearColor: [0, 0, 0, 1],\n    depthClearValue: 1,\n    stencilClearValue: 0\n  });\n  renderPass.end();\n  device.submit();\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>c});var s=r(6540);const a={},t=s.createContext(a);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);