/*! For license information please see 9e5f9e7c.556806ab.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[296],{2756:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var i=a(4848),r=a(8453);const t={},s="GPU Initialization",c={id:"api-guide/gpu/gpu-initialization",title:"GPU Initialization",description:"Adapter",source:"@site/../docs/api-guide/gpu/gpu-initialization.md",sourceDirName:"api-guide/gpu",slug:"/api-guide/gpu/gpu-initialization",permalink:"/docs/api-guide/gpu/gpu-initialization",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-guide/gpu/gpu-initialization.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"WebGPU vs WebGL",permalink:"/docs/api-guide/background/webgpu-vs-webgl"},next:{title:"GPU Resources",permalink:"/docs/api-guide/gpu/gpu-resources"}},o={},l=[{value:"Adapter",id:"adapter",level:2},{value:"Device",id:"device",level:2},{value:"Backend Adapters",id:"backend-adapters",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"gpu-initialization",children:"GPU Initialization"}),"\n",(0,i.jsx)(n.h2,{id:"adapter",children:"Adapter"}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.code,{children:"Adapter"})," is a factory for ",(0,i.jsx)(n.code,{children:"Device"})," instances for a specific backend (e.g. WebGPU or WebGL)."]}),"\n",(0,i.jsx)(n.h2,{id:"device",children:"Device"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"/docs/api-reference/core/device",children:(0,i.jsx)(n.code,{children:"Device"})})," class provides luma.gl applications with access to the GPU.\nA luma.gl application first creates a ",(0,i.jsx)(n.code,{children:"Device"})," instance which in turn provides the\napplication with facilities for creating GPU resources (such as ",(0,i.jsx)(n.code,{children:"Buffer"})," and ",(0,i.jsx)(n.code,{children:"Texture"})," objects),\nquerying GPU capabilities, compiling and linking shaders into pipelines, setting parameters,\nand of course performing draw and compute calls."]}),"\n",(0,i.jsx)(n.h2,{id:"backend-adapters",children:"Backend Adapters"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@luma.gl/core"})," API is not usable on its own. One or more GPU backend modules\nmust be also be imported from a corresponding GPU API backend module (",(0,i.jsx)(n.code,{children:"@luma.gl/webgpu"})," and/or ",(0,i.jsx)(n.code,{children:"@luma.gl/webgl"}),").\nand provided when creating a ",(0,i.jsx)(n.code,{children:"Device"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"To create a WebGPU device:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"yarn add @luma.gl/core\nyarn add @luma.gl/webgpu\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {webgpuAdapter} from '@luma.gl/webgpu';\n\nconst device = await luma.createDevice({type: 'webgpu', adapters: [webgpuAdapter], createCanvasContext: {canvas: ...}});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["It is possible to supply more than one device adapter to create an application\nthat can work in both WebGL and WebGPU environments. To create a ",(0,i.jsx)(n.code,{children:"Device"})," using\nthe best available adapter (luma.gl favors WebGPU over WebGL devices, whenever WebGPU is available)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"yarn add @luma.gl/core\nyarn add @luma.gl/webgl\nyarn add @luma.gl/webgpu\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import {luma} from '@luma.gl/core';\nimport {webglAdapter} from '@luma.gl/webgl';\nimport {webgpuAdapter} from '@luma.gl/webgpu';\n\nconst bestAvailableDevice = luma.createDevice({type: 'best-available', adapters: [webglAdapter, webgpuAdapter], createCanvasContext: true});\nconsole.log(device.type); // 'webgpu' or 'webgl' depending on what the browser supports.\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1020:(e,n,a)=>{var i=a(6540),r=Symbol.for("react.element"),t=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,c=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,a){var i,t={},l=null,d=null;for(i in void 0!==a&&(l=""+a),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(d=n.ref),n)s.call(n,i)&&!o.hasOwnProperty(i)&&(t[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===t[i]&&(t[i]=n[i]);return{$$typeof:r,type:e,key:l,ref:d,props:t,_owner:c.current}}n.Fragment=t,n.jsx=l,n.jsxs=l},4848:(e,n,a)=>{e.exports=a(1020)},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>c});var i=a(6540);const r={},t=i.createContext(r);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);