"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[2766],{5065:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>u,toc:()=>o});var s=t(4848),n=t(8453);const d={},i="Using GPU Buffers",u={id:"api-guide/gpu/gpu-buffers",title:"Using GPU Buffers",description:"Buffer Operations",source:"@site/../docs/api-guide/gpu/gpu-buffers.md",sourceDirName:"api-guide/gpu",slug:"/api-guide/gpu/gpu-buffers",permalink:"/docs/api-guide/gpu/gpu-buffers",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/master/docs/../docs/api-guide/gpu/gpu-buffers.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"GPU Memory",permalink:"/docs/api-guide/gpu/gpu-memory"},next:{title:"Using GPU Textures",permalink:"/docs/api-guide/gpu/gpu-textures"}},c={},o=[{value:"Buffer Operations",id:"buffer-operations",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"using-gpu-buffers",children:"Using GPU Buffers"})}),"\n",(0,s.jsx)(r.h2,{id:"buffer-operations",children:"Buffer Operations"}),"\n",(0,s.jsx)(r.p,{children:"The ability to copy memory between CPU, buffers and textures"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Dimension"}),(0,s.jsx)(r.th,{children:"WebGPU"}),(0,s.jsx)(r.th,{children:"WebGL2"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"writeBuffer"})}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"Read a buffer synchronously"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"readBuffer (sync)"})}),(0,s.jsx)(r.td,{children:"\u274c"}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"Read a buffer synchronously"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"readBuffer (async)"})}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"\u274c *"}),(0,s.jsx)(r.td,{children:"Read a buffer asynchronously"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"copyBufferToBuffer"})}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"Copy a buffer to another buffer without CPU roundtrip"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"copyBufferToTexture"})}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"Copy a buffer to a texture without CPU roundtrip"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"copyTextureToBuffer"})}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"Copy a buffer to a texture without CPU roundtrip"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Remarks:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"A WebGL extension does exist that enables asynchronous buffer reads, but it is not implemented on MacOS which is the primary development environment for luma.gl."}),"\n",(0,s.jsx)(r.li,{children:"Asynchronous reads are emulated by luma.gl by providing a Promise style API. The actual reads are still asynchronous though."}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>u});var s=t(6540);const n={},d=s.createContext(n);function i(e){const r=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function u(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(d.Provider,{value:r},e.children)}}}]);